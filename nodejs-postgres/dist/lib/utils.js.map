{"version":3,"sources":["../../src/lib/utils.js"],"names":["pathToKey","path","join","__dirname","replace","PRIV_KEY","fs","readFileSync","issueJWT","user","name","username","id","expiresIn","payload","sub","subName","issuedDate","Date","now","signedToken","jsonwebtoken","sign","algorithm","token"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA;AACA;AACA,IAAMA,YAAYC,eAAKC,IAAL,CAAUC,UAAUC,OAAV,CAAkB,MAAlB,EAAyB,KAAzB,CAAV,EAA2C,IAA3C,EAAiD,iBAAjD,CAAlB;AACA,IAAMC,WAAWC,aAAGC,YAAH,CAAgBP,SAAhB,EAA2B,MAA3B,CAAjB;;AAEO,IAAMQ,8BAAW,SAAXA,QAAW,CAASC,IAAT,EAAc;AAClC,QAAMC,OAAOD,KAAKE,QAAlB;AACA,QAAMC,KAAKH,KAAKG,EAAhB;AACA,QAAMC,YAAY,IAAlB;;AAEA,QAAMC,UAAU;AACZC,aAAMH,EADM;AAEZI,iBAASN,IAFG;AAGZO,oBAAaC,KAAKC,GAAL;AAHD,KAAhB;AAKA;AACA,QAAMC,cAAcC,uBAAaC,IAAb,CAAkBR,OAAlB,EAA2BT,QAA3B,EAAqC,EAAEQ,WAAWA,SAAb,EAAwBU,WAAW,OAAnC,EAArC,CAApB,CAXkC,CAWsE;AACxG,WAAO;AACHC,eAAO,YAAWJ,WADf;AAEHP,mBAAWA;AAFR,KAAP;AAKH,CAjBM","file":"utils.js","sourcesContent":["import jsonwebtoken from \"jsonwebtoken\";\r\nimport path from \"path\";\r\nimport fs from \"fs\";\r\n\r\n// const pathToKey = path.join(__dirname.replace(\"dist\",\"src\"), '..', 'id_rsa_pub.pem');\r\n// const PUB_KEY = fs.readFileSync(pathToKey, 'utf8');\r\nconst pathToKey = path.join(__dirname.replace(\"dist\",\"src\"), '..', 'id_rsa_priv.pem');\r\nconst PRIV_KEY = fs.readFileSync(pathToKey, 'utf8');\r\n\r\nexport const issueJWT = function(user){\r\n    const name = user.username;\r\n    const id = user.id;\r\n    const expiresIn = '1d';\r\n\r\n    const payload = {\r\n        sub : id,\r\n        subName: name,\r\n        issuedDate : Date.now()\r\n    };\r\n    //console.log(\"check all\",pathToKey,\" : \",payload.sub,\" : \",payload.issuedDate,\" : \",PUB_KEY);\r\n    const signedToken = jsonwebtoken.sign(payload, PRIV_KEY, { expiresIn: expiresIn, algorithm: 'RS256' }); // mentioning to sign using algrthm RS256\r\n    return {\r\n        token: 'bearer '+ signedToken,\r\n        expiresIn: expiresIn\r\n    }\r\n\r\n}"]}