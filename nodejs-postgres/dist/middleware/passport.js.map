{"version":3,"sources":["../../src/middleware/passport.js"],"names":["pathToKey","path","join","__dirname","replace","PUB_KEY","fs","readFileSync","options","jwtFromRequest","ExtractJwt","fromAuthHeaderAsBearerToken","secretOrKey","algorithms","passReqToCallback","strategy","JwtStrategy","req","jwtPayload","done","console","log","route","user","username","subName","result","length","err"],"mappings":";;;;;;;AAAA;;;;AACA;;AACA;;AACA;;;;AACA;;;;;;AAEA,IAAMA,YAAYC,eAAKC,IAAL,CAAUC,UAAUC,OAAV,CAAkB,MAAlB,EAAyB,KAAzB,CAAV,EAA2C,IAA3C,EAAiD,gBAAjD,CAAlB;AACA,IAAMC,UAAUC,aAAGC,YAAH,CAAgBP,SAAhB,EAA2B,MAA3B,CAAhB;;AAEA,IAAMQ,UAAU;AACZC,oBAAiBC,gBAAWC,2BAAX,EADL;AAEZC,iBAAcP,OAFF;AAGZQ,gBAAa,OAHD;AAIZC,uBAAmB;AAEvB;;AANgB,CAAhB,CAQO,IAAMC,8BAAW,IAAIC,kBAAJ,CAAgBR,OAAhB,EAAwB,UAASS,GAAT,EAAcC,UAAd,EAA0BC,IAA1B,EAA+B;AAC3EC,YAAQC,GAAR,CAAY,wCAAZ;AACAD,YAAQC,GAAR,CAAY,iBAAZ,EAA8BJ,IAAIK,KAAJ,CAAUrB,IAAxC;AACAmB,YAAQC,GAAR,CAAY,oBAAZ,EAAiCH,UAAjC;;AAEA,QAAIK,OAAO;AACPC,kBAAUN,WAAWO;AADd,KAAX;AAGA,QAAG;AACC,gCAAQF,IAAR,EAAa,UAASG,MAAT,EAAgB;AACzB,gBAAGA,OAAOC,MAAP,GAAgB,CAAnB,EAAqB;AACjB;AACA,uBAAOR,KAAK,IAAL,EAAUO,MAAV,CAAP;AACH,aAHD,MAIK;AACD;AACA,uBAAOP,KAAK,IAAL,EAAW,KAAX,CAAP;AACH;AACJ,SATD;AAUH,KAXD,CAYA,OAAMS,GAAN,EACA;AACI,eAAOT,KAAKS,GAAL,EAAU,KAAV,CAAP;AACH;AACJ,CAxBuB,CAAjB","file":"passport.js","sourcesContent":["import JwtStrategy from \"passport-jwt/lib/strategy\";\r\nimport { ExtractJwt } from \"passport-jwt/lib\";\r\nimport { insert,getUser } from \"../services/userQuery\";\r\nimport path from \"path\";\r\nimport fs from \"fs\";\r\n\r\nconst pathToKey = path.join(__dirname.replace(\"dist\",\"src\"), '..', 'id_rsa_pub.pem');\r\nconst PUB_KEY = fs.readFileSync(pathToKey, 'utf8');\r\n\r\nconst options = {\r\n    jwtFromRequest : ExtractJwt.fromAuthHeaderAsBearerToken(),\r\n    secretOrKey : PUB_KEY,\r\n    algorithms : 'RS256',\r\n    passReqToCallback: true\r\n}\r\n//console.log(\"check options: \",options.jwtFromRequest,\" : \",options.secretOrKey);\r\n\r\nexport const strategy = new JwtStrategy(options,function(req, jwtPayload, done){\r\n    console.log(\"------- Using Custom Strategy --------\")\r\n    console.log(\"check req url: \",req.route.path);\r\n    console.log(\"check jwtPayload: \",jwtPayload);\r\n\r\n    let user = {\r\n        username: jwtPayload.subName\r\n    }\r\n    try{\r\n        getUser(user,function(result){\r\n            if(result.length > 0){\r\n                //console.log(\"err\");\r\n                return done(null,result);\r\n            }\r\n            else {\r\n                //console.log(\"fail\");\r\n                return done(null, false);\r\n            }\r\n        });\r\n    }\r\n    catch(err)\r\n    {\r\n        return done(err, false);\r\n    }\r\n})"]}